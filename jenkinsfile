pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '3', artifactNumToKeepStr: '3'))
    }

    tools {
        maven 'maven_3.9.4'
    }

    environment {
        IMAGE_NAME = 'sambhajinagar-ms'
        // Dynamic image tag based on build number or Git commit hash
        IMAGE_TAG = "${IMAGE_NAME}:${BUILD_NUMBER}"
    }

    stages {
        stage('Code Compilation') {
            steps {
                echo 'Code Compilation is In Progress!'
                sh 'mvn clean compile'
                echo 'Code Compilation is Completed Successfully!'
            }
        }

        stage('Code QA Execution') {
            steps {
                echo 'JUnit Test Case Check in Progress!'
                sh 'mvn clean test'
                echo 'JUnit Test Case Check Completed!'
            }
        }

        stage('Code Package') {
            steps {
                echo 'Creating WAR Artifact'
                sh 'mvn clean package'
                echo 'Artifact Creation Completed'
            }
        }

        stage('Building & Tag Docker Image') {
            steps {
                echo 'Starting Building Docker Image'
                sh "docker build -t ${IMAGE_TAG} ."
                echo 'Docker Image Build Completed'
            }
        }

        stage('Docker Image Scanning') {
            steps {
                echo 'Scanning Docker Image...'
                sh "docker scan ${IMAGE_TAG} || echo 'Scan Failed - Proceeding with Caution'"
                echo 'Docker Image Scanning Completed!'
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            // Optionally, add notification steps here (email, Slack, etc.)
            // Example Slack notification
            slackSend(channel: '#your-channel', message: "Build ${BUILD_NUMBER} succeeded")
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
            // Optionally, send failure notification here
            slackSend(channel: '#your-channel', message: "Build ${BUILD_NUMBER} failed")
        }
    }
}
